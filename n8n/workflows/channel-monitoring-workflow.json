{
  "name": "Resume YouTube - Channel Monitoring",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 10
            }
          ]
        }
      },
      "id": "1",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "url": "={{$env.NEXT_PUBLIC_APP_URL}}/api/youtube/channel-info",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$env.N8N_API_KEY}}"
            }
          ]
        },
        "options": {
          "timeout": 15000
        }
      },
      "id": "2",
      "name": "Get Channels to Monitor",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.channels }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "3",
      "name": "Check If Channels Exist",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "channels",
        "options": {}
      },
      "id": "4",
      "name": "Split Into Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        900,
        200
      ]
    },
    {
      "parameters": {
        "url": "={{$env.NEXT_PUBLIC_APP_URL}}/api/youtube/videos",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "channelId",
              "value": "={{ $json.youtube_channel_id }}"
            },
            {
              "name": "maxResults",
              "value": "5"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$env.N8N_API_KEY}}"
            }
          ]
        },
        "options": {
          "timeout": 10000
        }
      },
      "id": "5",
      "name": "Get Channel Videos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1120,
        200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.videos }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "6",
      "name": "Check If New Videos",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1340,
        200
      ]
    },
    {
      "parameters": {
        "message": "=Found {{ $json.videos.length }} videos for channel {{ $json.channel_name }}",
        "options": {}
      },
      "id": "7",
      "name": "Log New Videos Found",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1560,
        100
      ]
    },
    {
      "parameters": {
        "message": "=No new videos found for channel {{ $json.channel_name }}",
        "options": {}
      },
      "id": "8",
      "name": "Log No New Videos",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1560,
        300
      ]
    },
    {
      "parameters": {
        "message": "=No channels to monitor at {{ $now }}",
        "options": {}
      },
      "id": "9",
      "name": "Log No Channels",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        900,
        400
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "10",
      "name": "Merge Channel Results",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1780,
        300
      ]
    },
    {
      "parameters": {
        "message": "=Channel monitoring completed at {{ $now }}. Checked {{ $json.channels_checked || 0 }} channels.",
        "options": {}
      },
      "id": "11",
      "name": "Log Final Results",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2000,
        300
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get Channels to Monitor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Channels to Monitor": {
      "main": [
        [
          {
            "node": "Check If Channels Exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Channels Exist": {
      "main": [
        [
          {
            "node": "Split Into Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log No Channels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Into Items": {
      "main": [
        [
          {
            "node": "Get Channel Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Channel Videos": {
      "main": [
        [
          {
            "node": "Check If New Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If New Videos": {
      "main": [
        [
          {
            "node": "Log New Videos Found",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log No New Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log New Videos Found": {
      "main": [
        [
          {
            "node": "Merge Channel Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log No New Videos": {
      "main": [
        [
          {
            "node": "Merge Channel Results",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Log No Channels": {
      "main": [
        [
          {
            "node": "Merge Channel Results",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge Channel Results": {
      "main": [
        [
          {
            "node": "Log Final Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "channel-monitoring-workflow",
  "tags": []
}